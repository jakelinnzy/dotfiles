" Map <leader> to space
" Has to appear before extension load, etc.
let mapleader = ' '

" Emulated plugins
let g:EasyMotion_do_mapping = 0
set surround
set commentary
set easymotion " Requires installing IdeaVim-EasyMotion in IDE
set highlightedyank
set textobj-entire " ae, ie for entire file
set argtextobj     " aa, ia for an argument

" IDEA specific settings
set ideajoin
set ideaput
set ideamark
set ideastatusicon=gray
set idearefactormode=keep

" Use C-P and C-N to navigate through completion items
set lookupkeys& " <Tab>,<Down>,<Up>,<Enter>,<Left>,<Right>,<C-Down>,<C-Up>,<PageUp>,<PageDown>,<C-J>,<C-Q>
set lookupkeys+=<C-N>
set lookupkeys+=<C-P>

set showmode
set scrolloff=5
set sidescrolloff=5
set ignorecase
set smartcase
set incsearch
set hlsearch
set clipboard=unnamedplus  " yank into system clipboard by default
set clipboard+=ideaput

set number
set norelativenumber

" --------
" Mappings
" --------

inoremap jk <Esc>

map <Space> <Nop>
" `s` deletes one character and enters insert mode
" Why use it if you have xi and r?
nnoremap s <Nop>
" S is a synonym for cc (change the current line)
nnoremap S <Nop>

" Jump to start and end of line using the home row keys
noremap H ^
noremap L $

" Scroll with , and m
noremap , <C-u>
noremap m <C-d>
" Move the mark key to M
noremap M m

" Use easymotion with f and s
nmap f <Plug>(easymotion-bd-f)
nmap s <Plug>(easymotion-s2)

" 'Q' in normal mode enters Ex mode. You almost never want this.
nnoremap Q <Nop>
nnoremap U <Nop>

" Make Y consistent with C and D
nnoremap Y y$

" ^U Insert Mode breaks undo sequence
inoremap <C-u> <C-g>u<C-u>

" Use Emacs movement keybindings in insert mode
inoremap <C-f> <Right>
inoremap <C-b> <Left>
inoremap <C-p> <C-o>gk
inoremap <C-n> <C-o>gj
inoremap <A-f> <S-Right>
inoremap <A-b> <S-Left>

cnoremap <C-f> <Right>
cnoremap <C-b> <Left>
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>
cnoremap <A-b> <S-Left>
cnoremap <A-f> <S-Right>

" Ctrl-a and Ctrl-e
inoremap <C-a> <C-o>^
inoremap <C-e> <End>
cnoremap <C-a> <Home>
cnoremap <C-e> <End>

" ideavim uses <A-h> instead of <M-h>
" <M-n> to move between pairs
inoremap <A-n> <C-o>%
" <M-o> and <M-Shift-o> adds new line below and above
inoremap <A-o> <C-o>o
inoremap <A-O> <C-o>O

" Better way to move between windows
map <A-h> <C-W>h
map <A-j> <C-W>j
map <A-k> <C-W>k
map <A-l> <C-W>l

inoremap <A-h> <Esc><C-W>h
inoremap <A-j> <Esc><C-W>j
inoremap <A-k> <Esc><C-W>k
inoremap <A-l> <Esc><C-W>l

" Ctrl-W t to move window to a new tab
nnoremap <C-w>t <C-w>T

" unimpaired mappings - from https://github.com/saaguero/ideavimrc/blob/master/.ideavimrc
nnoremap [<space> O<esc>j
nnoremap ]<space> o<esc>k
nmap [q <Action>(PreviousOccurence)
nmap ]q <Action>(NextOccurence)
nmap [m <Action>(MethodUp)
nmap ]m <Action>(MethodDown)
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap ]c <Action>(VcsShowNextChangeMarker)

" Tabs
nmap [b <Action>(PreviousTab)
nmap ]b <Action>(NextTab)

" -------------------
" Leader key mappings
" -------------------

nmap <Leader><Space> <Action>(GotoFile)
nmap <Leader>q :q<CR>

" Find stuff
nmap <Leader>fs :w<CR>
nmap <Leader>ff <Action>(GotoFile)
nmap <Leader>fr <Action>(RecentFiles)

" Code actions...
nmap <Leader>ca <Action>(ShowIntentionActions)
nmap <Leader>cr <Action>(RenameElement)
nmap <Leader>cf <Action>(ReformatCode)
nmap <Leader>cd <Action>(GotoDeclaration)
nmap <Leader>cu <Action>(FindUsages)
nmap <Leader>cb <Action>(ToggleLineBreakpoint)
nmap <Leader>ci <Action>(OptimizeImports)

" Toggle settings
nmap <Leader>tw <Action>(EditorToggleUseSoftWraps)
nmap <Leader>th :nohlsearch<CR>
" SPC t a to show action IDs
nmap <Leader>ta <Action>(VimFindActionIdAction)
" show git blame
nmap <Leader>tb <Action>(Annotate)

" SPC w c to close window
nmap <Leader>wq <C-w>c
nmap <Leader>ws :split<CR>
nmap <Leader>wv :vsplit<CR>
